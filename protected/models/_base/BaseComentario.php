<?php

/**
 * This is the model base class for the table "comentario".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Comentario".
 *
 * Columns in table "comentario" available as properties of the model,
 * followed by relations of table "comentario" available as properties of the model.
 *
 * @property integer $id
 * @property string $autor
 * @property string $comentario
 * @property integer $id_post
 * @property integer $id_usuario
 *
 * @property Post $idPost
 * @property Usuario $idUsuario
 */
abstract class BaseComentario extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'comentario';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Comentario|Comentarios', $n);
	}

	public static function representingColumn() {
		return 'autor';
	}

	public function rules() {
		return array(
			array('autor, comentario, id_post, id_usuario', 'required','message'=>'Campo ObrigatÃ³rio'),
			array('id_post, id_usuario', 'numerical', 'integerOnly'=>true),
			array('autor', 'length', 'max'=>255),
			array('id, autor, comentario, id_post, id_usuario', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idPost' => array(self::BELONGS_TO, 'Post', 'id_post'),
			'idUsuario' => array(self::BELONGS_TO, 'Usuario', 'id_usuario'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'autor' => Yii::t('app', 'Autor'),
			'comentario' => Yii::t('app', 'Comentario'),
			'id_post' => null,
			'id_usuario' => null,
			'idPost' => null,
			'idUsuario' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('autor', $this->autor, true);
		$criteria->compare('comentario', $this->comentario, true);
		$criteria->compare('id_post', $this->id_post);
		$criteria->compare('id_usuario', $this->id_usuario);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}